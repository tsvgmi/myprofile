############################################################################
# File:        func/common
# Author:      tvuong
# Created:     Thu Mar 23 22:38:28 PST 2006
# Description:
############################################################################

#==========================================================================
# Function:    [hcd]
# Description: CD while under fuse dir
#==========================================================================
function hcd {
  typeset path=$1 host=$2

  if [ "$host" ]; then
    if ! grep $host ~/.ssh/known_hosts >/dev/null; then
      mssh keypush $host
    fi
    export HCD_HOST=$host
  else
    host=$HCD_HOST
  fi
  path=~/fuse/$host/$path
  _cd $path
}

#==========================================================================
# Function:    [sc0]
# Description: Run screehns directly
#==========================================================================
function sc0 {
  mssh screens $@
}

#==========================================================================
# Function:    [sc1]
# Description: Run screen on an intermediate host
#==========================================================================
function sc1 {
  typeset host rhost phost

  host=$1
  case $host in
  *@*)
   rhost=${host%@*}
   phost=${host#*@}
   iterm_profile Non-Production
   mssh screens -j $phost $rhost
   ;;
  mock*)
    iterm_profile Mock
    mssh screens -J $@ ;;
  *m[35]|*[78]07m7)
    iterm_profile Production
    mssh screens -J $@ ;;
  *)
    iterm_profile Non-Production
    mssh screens -P $@ ;;
  esac
  iterm_profile Default
}

#==========================================================================
# Function:    [sc2]
# Description: .
#==========================================================================
function sc2 {
  typeset scopt= i j

  while getopts :v-: i; do
    if [ "$i" = "-" ]; then
      i="${OPTARG%%=*}" OPTARG="${OPTARG#$i}" OPTARG="${OPTARG#=}" i=-$i
    fi
    case $i in
    v|-pval)  scopt="$scopt --pval" ;;
    *)        F_usageOper $oper ;;
    esac
  done
  let j=$OPTIND-1; shift $j; OPTIND=0
  case $1 in
  *m[0-9]|*m[0-9][0-9])
    sc1 $1
    ;;
  *)
    # Function call is susceptible for space in args.  So we eval
    eval scem $scopt $@
    ;;
  esac
}

#==========================================================================
# Function:    [iterm_profile]
# Description: .
#==========================================================================
function iterm_profile {
  typeset profile=$1

  print "\x1b]1337;SetProfile=${profile}\x07"
}

#==========================================================================
# Function:    [scem]
# Description: ssh to an instance
#==========================================================================
function scem {
  typeset args i j pval

  while getopts :v-: i; do
    if [ "$i" = "-" ]; then
      i="${OPTARG%%=*}" OPTARG="${OPTARG#$i}" OPTARG="${OPTARG#=}" i=-$i
    fi
    case $i in
    v|-pval)  pval=yes ;;
    *)        F_usageOper $oper ;;
    esac
  done
  let j=$OPTIND-1; shift $j; OPTIND=0

  if [ $# -gt 0 ]; then
    typeset inst=$1
    typeset env=$2
    typeset phost=$3
    [ "$env" ] || env=adm
    if [ "$pval" ]; then
      args="-i. --property=INC_COMPONENT=$inst -e $env"
    else
      args="-i $inst -e $env"
    fi
    case $env in
    adm|prd|dr|mock)
      iterm_profile Production
      if [ "$phost" ]; then
        eval mssh screens -j $phost $args
      else
        eval mssh screens -J $args
      fi
      ;;
    *)
      iterm_profile Non-Production
      if [ "$phost" ]; then
        eval mssh screens -j $phost $args
      else
        eval mssh screens -P $args
      fi
      ;;
    esac
  else
    iterm_profile Production
    mssh screens -P -is $sargs
  fi
  set +x
  iterm_profile Default
}

#==========================================================================
# Function:    [stmux]
# Description: .
#==========================================================================
function stmux {
  mssh screens -P -t $@
}
