#!/bin/bash
. ${0%/*}/../etc/tool.env
#######################################################################
# File: 	admtool
# Description:  Sysadmin tools
# Created:	2002-06-23
# $Id$
#######################################################################
PATH=$PATH:/sbin:/usr/sbin

#======================================================================
# Function:    [f_killApp]
# Description: .
#======================================================================
function f_killApp {
  typeset app pidlist

  pidlist=
  for app in $*; do
    set -- $(ps -awx | egrep "(Applications|Resources|Library|PreferencePanes)/.*${app}" | egrep -v egrep | sed -e 's/^ *//' -e 's/ .*$//')
    if [ $# -gt 0 ]; then
      pidlist="$pidlist $*"
    fi
  done
  if [ "$pidlist" ]; then
    set -x
    kill $pidlist
    set +x
    sleep 1
  fi
}

#==========================================================================
# Function:    [f_delete10Net]
# Description: .
#==========================================================================
function f_delete10Net {
  typeset gwif

  set -- $(netstat -nrf inet | egrep "^10 ")
  if [ $# -gt 2 ]; then
    gwif=$2
    F_surun route delete -net 10.0.0.0 $gwif 255.0.0.0
  fi
}

function f_isWorkingHour {
  typeset dow=$(date +%u)
  if [ "$dow" -ge 1 -a "$dow" -le 5 ]; then
    typeset hour=$(date +%H)
    if [ "$hour" -ge 5 -a "$hour" -le 18 ]; then
      return 0
    fi
  fi
  return 1
}

#==========================================================================
# Function:    [f_mount_nfs]
# Description: .
#==========================================================================
function f_mount_nfs {
  typeset src=$1
  typeset target=$2
  typeset subnet=${src%:*}
  subnet=${subnet%.*}

  [ "$target" ] || target=/mnt/${src##*/}
  if df $target | egrep $src; then
    F_logProgress "$target already mounted"
    return
  fi
  if ifconfig | fgrep $subnet ; then
    [ -d $target ] || mkdir -p $target
    set -x
    sudo mount -t nfs -o resvport,rw $src $target
    set +x
  fi
}

#==========================================================================
# Function:    [f_location_control]
# Description: .
#==========================================================================
function f_location_control {
  typeset location=$1
  typeset state=$2

  F_logProgress "Turn wifi to $state and switch network to $location"
  set -x
  sudo networksetup -switchtolocation $location
  sleep 1
  sudo networksetup -setairportpower  en0 $state
  set +x
  sleep 3
}

#------------------------------------------------ Begin of script ---
#------------------------------------------------ Begin of script ---
#------------------------------------------------ Begin of script ---

F_subCommand $*
oper=$1; shift
case $oper in

#@Use: synergy [host]
#@Des: Running synergy
#=begin
# This detects where you're logged in from (using SSH) and run a client
# connect to the server you're from.  This allow laptop to ssh connect
# to a Unix ws and have it connected to the current ip address
#
# If host is specified, it ssh to host first before run.  This allows
# running this command on the laptop and have the WS connected to it
# w/o having to ssh in.
#=end
  synergy)
    dossh= ropt= user=$LOGNAME
    while getopts :su: i; do
      case $i in
      s) dossh=yes ropt="$ropt -$i" ;;
      u) user=$OPTARG ;;
      *) F_usageOper $oper ;;
      esac
    done
    let j=$OPTIND-1; shift $j; OPTIND=0
    rhost=$1
    if [ "$rhost" -a "$rhost" != "$EM_HOST" ]; then
      F_exec ssh $user@$rhost bin/cptool $oper $ropt -u $LOGNAME
    else
      set -- $SSH_CLIENT
      [ $# -gt 0 ] || F_abort "You must logon from ssh to invoke this"
      fromip=$1
      pgrep -f 'X .*:0'
      if [ $? -ne 0 ]; then
        F_abort "X windows not started" $LINENO
      fi
      F_system pkill -9 synergyc && F_wait 1
      F_logProgress "Turn off screen saver"
      DISPLAY=:0 F_system xset -dpms
      if [ "$dossh" ]; then
        F_system ssh -f -N -L localhost:24800:$fromip:24800 $user@$fromip
        F_exec synergyc --display :0 localhost
      else
        F_exec synergyc --display :0 $fromip
      fi
    fi
    ;;

  splitvpn)
    [ $# -ge 2 ] || F_usageOper $oper
    dest=$1 vpnif=$2
    [ "$dest" ] || dest=etrade
    [ "$vpnif" ] || vpnif=utun0
    F_rbrun vpnhelper $dest split $vpnif
    ;;

  cvpn-reset)
    sudo kextunload /System/Library/Extensions/CiscoVPN.kext
    sleep 1
    sudo kextload /System/Library/Extensions/CiscoVPN.kext
    ;;

  rsynergy)
    open -a "Synergyd"
    PATH=$PATH:/usr/local/bin
    growlnotify --appIcon Synergyd --message 'Synergy started'
    F_exec ssh tvuong@lxp6d199m0 bin/mpolohook synergy
    ;;

  mount-nfs)
    [ $# -ge 1 ] || F_usageOper $oper
    src=$1
    target=$2
    [ "$target" ] || target=/mnt/${src##*/}
    sudo umount $target
    f_mount_nfs $1 $target
    ;;

  connect)
    for target in $*; do
      $0 _connect $target
    done
    ;;

  #Use: connect et|home|vpn|splitvpn
  #Des: Setup environment for different network location.
  _connect)
    cd
    target=$1
    case $target in
    vpn)
      (
        f_location_control ETrade on
        f_killApp Opera iTunes jDownloader Plex.Media.Server \
           Synergyd
        if f_isWorkingHour; then
          open -a "Microsoft Communicator"
        fi
        open -a "Microsoft Outlook"
        F_surun $EM_MYPROG _killasroot TrendMicro
        f_delete10Net
        osascript -e "set Volume 0"
        sudo umount /mnt/share_1
        #osascript ~/tmp/nosound.as
        say -v Whisper vpn
      ) | tee -a ~/.tool/cptool-$oper.log
      ;;
    et|etwl|etrade)
      (
        f_location_control ETrade on
        f_killApp Opera iTunes jDownloader Plex.Media.Server \
           Synergyd VirtualBoxVM
        if f_isWorkingHour; then
          open -a "Microsoft Communicator"
        fi
        open -a "Microsoft Outlook"
        F_surun $EM_MYPROG _killasroot TrendMicro
        f_delete10Net
        osascript -e "set Volume 0"
        sudo umount /mnt/share_1
        #osascript ~/tmp/nosound.as
        say -v Whisper office
      ) | tee -a ~/.tool/cptool-$oper.log
      ;;
    home|homewl)
      (
        if [ "$target" = homewl ]; then
          f_location_control Home on
        else
          f_location_control Home off
        fi
        f_killApp Microsoft.Messenger Microsoft.Communicator Microsoft.Outlook \
            Synergyd
        F_surun $EM_MYPROG _killasroot TrendMicro
        f_delete10Net
        f_mount_nfs 192.168.6.1:/nfs/share_1 /mnt/share_1
        #osascript ~/tmp/sound.as
        rm -f ~/.ssh/master*
        open -a "Plex Media Server"
        say -v Whisper home
      ) | tee -a ~/.tool/cptool-$oper.log
      ;;
    auto)
      (
        f_location_control Auto on
        f_killApp Microsoft.Messenger Microsoft.Communicator Microsoft.Outlook \
            Synergyd
        F_surun $EM_MYPROG _killasroot TrendMicro
        open -a "Plex Media Server"
        f_delete10Net
        f_mount_nfs 192.168.6.1:/nfs/share_1 /mnt/share_1
        #osascript ~/tmp/sound.as
        rm -f ~/.ssh/master*
        say -v Whisper auto
      ) | tee -a ~/.tool/cptool-$oper.log
      ;;

    splitvpn|svpn)
      (
        f_location_control svpn on
        connected=
        while [ ! "$connected" ]; do
          for intf in en0 en1 en2 en3 en4; do
            if ifconfig $intf | egrep "inet.*10\.50\."; then
              F_logProgress "Detect VPN interface at $intf"
              rm -f ~/.ssh/master*
              F_system $EM_MYPROG splitvpn etrade $intf
              connected=true
              break
            fi
          done
          sleep 1
        done
        f_killApp jDownloader Plex.Media.Server
        open -g -a 'Microsoft Outlook'
        if f_isWorkingHour; then
          open -a "Microsoft Communicator"
        fi
        f_mount_nfs 192.168.6.1:/nfs/share_1 /mnt/share_1
        #osascript ~/tmp/sound.as
        say -v Whisper split vpn
      ) | tee -a ~/.tool/cptool-$oper.log
      ;;

    *)
      F_abort "Unknown connection node: $target"
      ;;
    esac
    rm -f ~/.ssh/master*
    echo $target >~/.ssh/last_loc.dat
    ;;

  #------------------ Kill off all non-essential app to preserve battery ---
  lowpower)
    f_killApp MicrosoftKeyboardHelper Microsoft.Database.Daemon \
	EyeTV.Helper Glims.Agent Little.Snitch.UIAgent \
	MarcoPolo Synergyd
    ;;

  _killasroot)
    f_killApp $@
    ;;

  *)
    F_usageOper $oper
    ;;
esac
exit 0

