#!/bin/bash
. ${0%/*}/../etc/tool.env
#######################################################################
# File: 	admtool
# Description:  Sysadmin tools
# Created:	2002-06-23
# $Id$
#######################################################################

#==========================================================================
# Function:    [f_editFile]
# Description: .
#==========================================================================
function f_editFile {
  typeset file=$1
  typeset tmpf=$(F_tmpf 4)

  touch $tmpf
  $EDITOR $file
  [ "$file" -nt $tmpf ] && return 0
  return 1
}

#==========================================================================
# Function:    [f_diffNMove]
# Description: .
#==========================================================================
function f_diffNMove {
  typeset src=$1
  typeset dst=$2
  typeset asroot=$3
  if [ ! -s "$src" ]; then
    F_logError "Nothing found in $src.  Skip" $LINENO
    return 1
  fi
  if diff -q $src $dst; then
    F_logProgress "Nothing changed in $dst.  Skip"
    return 1
  fi
  if [ "$asroot" ]; then
    [ -f $dst ] && F_surun mv $dst $dst.OLD
    F_surun mv $src $dst
  else
    [ -f $dst ] && mv $dst $dst.OLD
    F_system mv $src $dst
  fi
  return 0
}

function f_rsoption {
  typeset host=$1
  typeset rsopt

  case $(etmachines -O -n ${host##*@}) in
  sunos)
    rsopt="--rsync-path=/etrade/pkgs/opensrc/1.0/bin/rsync"
    ;;
  *)
    rsopt="--rsync-path=/etrade/pkgs/linux/intel/opensrc/1.0/bin/rsync"
    ;;
  esac
  set +x
  echo $rsopt
}

PATH=$PATH:/sbin:/usr/sbin

#------------------------------------------------------ Begin of script ---
#------------------------------------------------------ Begin of script ---
#------------------------------------------------------ Begin of script ---

F_subCommand $*
oper=$1; shift
case $oper in
  setup)
    user=$USER dopull= dokey= dotool= doetfw=
    while getopts :ekltu: i; do
      case $i in
      e) doetfw=yes ;;
      k) dokey=yes ;;
      l) dopull=yes ;;
      t) dotool=yes ;;
      u) user=$OPTARG ;;
      *) F_usageOper $oper ;;
      esac
    done
    let j=$OPTIND-1; shift $j; OPTIND=0
    [ $# -gt 0 ] || F_usageOper $oper
    if [ "$dokey" ]; then
      if [ "$dopull" ]; then
        F_system emssh -u $user keypull $* || exit 1
      else
        F_system emssh -u $user keypush $* || exit 1
      fi
    fi
    jobs=10
    cd $HOME
    for host in $*; do
      rsopt="--rsh=ssh --exclude .svn --delete --delete-excluded"
      rsopt="$rsopt $(f_rsoption $host)"
      F_parallel $jobs - rsync $rsopt -vaz myprofile $user@$host:
      if [ "$doetfw" ]; then
        F_parallel $jobs - rsync $rsopt -vaz etfw2 --exclude /etfw2/pem/ $user@$host:
      fi
      if [ "$dotool" ]; then
        F_parallel $jobs - rsync $rsopt -vaz emtools $user@$host:
      fi
    done
    F_waitBg "Wait for sync to complete"
    for host in $*; do
      F_system ssh $user@$host "
        ln -s myprofile/* .
        mv .profile .profile.old
        ln -s myprofile/.* .
        ln -s .bash_profile .profile
        touch .usebash
      "
    done
    ;;

  syncto)
    [ $# -gt 0 ] || F_usageOper $oper
    cd $HOME
    for host in $*; do
      rsopt="--rsh=ssh --exclude .svn --delete --delete-excluded"
      rsopt="$rsopt $(f_rsoption $host)"
      F_system rsync $rsopt -vaz myprofile $host: &
      F_system rsync $rsopt -vaz etfw2 --exclude /etfw2/pem/ $host: &
    done
    F_waitBg "Wait for sync complete"
    ;;

  sync-profile)
    [ $# -gt 0 ] || F_usageOper $oper
    cd $HOME
    for host in $*; do
      rsopt="--rsh=ssh --exclude .svn --delete --delete-excluded"
      rsopt="$rsopt $(f_rsoption $host)"
      F_parallel 8 -  rsync $rsopt -vaz myprofile $host: &
    done
    F_waitBg "Wait for sync complete"
    ;;

  cntlm)
    user=$LOGNAME nopass=
    while getopts :u:P i; do
      case $i in
      P) nopass=yes ;;
      u) user=$OPTARG ;;
      *) F_usageOper $oper ;;
      esac
    done
    let j=$OPTIND-1; shift $j; OPTIND=0    
    F_system pkill cntlm
    domain=CORP
    if [ ! "$nopass" ]; then
      passwd=$(F_passwdGetNew $domain) || exit 1
    fi
    if [ -f ~/.tool/cntlm.conf ]; then
      cfile=~/.tool/cntlm.conf
    else
      cfile=$(F_tmpf 0)
      touch $cfile
    fi
    if [ "$nopass" ]; then
      F_exec cntlm -g -c $cfile -l 6100 -u $user@$domain 10.50.79.250:8080
    else
      exec cntlm -g -c $cfile -l 6100 -u $user@$domain -p $passwd 10.50.79.250:8080
    fi    
    ;;

  #@Use: kinit user password
  #@Des: Kerberos init (authentication session)
  kinit)
    for path in /etrade/pkgs/linux/intel/sunjava2/1.5.0r06DST2 \
        /usr/kerberos; do
      if [ -x $path/bin/kinit ]; then
        exec $path/bin/kinit $@
      fi
    done
    ;;

  syncetf)
    dir=~/etfw2/
    for host in $*; do
      rsopt="--rsh=ssh $(f_rsoption $host)"
      exlist="--exclude .svn --exclude pem/cfg --exclude pem/etc --exclude pem/packages"
      F_system rsync --delete --delete-excluded $rsopt -vaz $exlist $dir $host:$dir
    done
    F_waitBg "Wait for sync complete"
    ;;

  syncdir)
    [ $# -gt 1 ] || F_usageOper $oper
    dir=$1
    shift
    for host in $*; do
      rsopt="--rsh=ssh"
      rsopt="$rsopt $(f_rsoption $host)"
      case $dir in
      */selaf*|selaf*)
        exlist="--exclude .svn --exclude OLD --exclude dump --exclude log --exclude doc --exclude doc_script --exclude webapp --exclude var --exclude ffprofiles"
        ;;
      *)
        exlist="--exclude .svn"
        ;;
      esac
      F_system rsync --delete --delete-excluded $rsopt -vaz $exlist $dir $host:$dir
    done
    F_waitBg "Wait for sync complete"
    ;;

  *)
    F_usageOper $oper
    ;;
esac
exit 0

