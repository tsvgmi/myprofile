#!/bin/bash

# Simulate the open in mac on WSL.  However, also direct to use
# Windows app with WSL path if applicable
#

#BROWSER=msedge
BROWSER=vivaldi

function f_winexec {
  typeset app=$1
  shift
  prog=$(locate --basename $app.exe | egrep "/$app.exe$" | \
    grep -v 'Recycle.Bin' | head -1)
  if [ ! "$prog" ]; then
    echo "$app not found" 2>&1
    exit 1
  fi
  echo "$prog $@" >>~/debug.log
  set -x
  "$prog" "$@" &
}

function winfile {
  typeset ufile=$1
  typeset fpath

  case $ufile in
    /*) ;;
    .)  ufile=$PWD ;;
    *)  ufile=$PWD/$ufile ;;
  esac
  fpath=$(realpath $ufile)
  case $fpath in
    # Native windows but mounted in WSL - revert to windows
    /mnt/*)
      fpath=$(echo $fpath | ruby -pe '$_.sub!(%r{/mnt/(.)}, "\\1:")')
      ;;
    # Native WSL, need to change path to wsl
    *)
      fpath=$(echo $fpath | sed -e "s,^,//wsl.localhost/${WSL_DISTRO_NAME},")
      ;;
  esac
  echo $fpath
}

oopt= app=
while getopts :a:g i; do
  case $i in
    a) app=$OPTARG ;;
    g) oopt="$oopt -$i" ;;
  esac
done
let i=$OPTIND-1; shift $i; OPTIND=0
file=$1
case $file in
https:*|http:*)
  url=$(echo $1 | \
    sed -e "s,^file:///,file:////wsl.localhost/$WSL_DISTRO_NAME/,")
  shift
  f_winexec $BROWSER $url $@
  ;;

*.html|*.mp3|*.pdf|*.png|*.jpeg|*.svg)
  url=file://$(winfile $1)
  [ "$app" ] || app=$BROWSER
  f_winexec $app $url
  ;;

*.md)
  [ "$app" ] || app=Typora
  f_winexec $app $@
  ;;

*)
  if [ ! "$app" ]; then
    [ -d "$1" ] && app=explorer
    if [ ! "$app" ]; then
      echo "***** Unsupported file: $file" >&2
      exit 1
    fi
  fi
  lpath=file://$(winfile $1)
  f_winexec $app $lpath
  ;;
esac
