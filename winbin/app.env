#!/bin/env bash
############################################################################
# File:        common/etc/app.env
# Author:      tvuong
# Created:     Fri Mar 14 21:58:14 -0700 2014
# Copyright (c) E*Trade - 2014.
# Description:
# $Id$
############################################################################

#==========================================================================
# Function:    [F_toWslPath]
# Description: Convert path from Windows to Unix
#==========================================================================
function F_toWslPath {
  typeset path=$1

  case $path in
  *wsl.localhost*)
    path=$(echo $path | sed -e "s,..wsl.localhost.${WSL_DISTRO_NAME}.,/," -e 's,\\,/,g')
    ;;
  [A-Z]:*)
    path=$(echo $path | sed -E -e 's,([A-Z]):,/mnt/\L\1,' -e 's,\\,/,g')
    ;;
  esac

  if [[ "$path" =~ -utf ]]; then
    sfile=${path%-*}
    encode=${path##*-}
    if [[ "$encode" = "utf" ]]; then
      if file $sfile | grep UTF-16; then
        encode=utf16
      else
        encode=utf8
      fi
    fi
    path="<(iconv -f $encode $sfile)"
  fi
  echo $path
}

#==========================================================================
# Function:    [F_tmpf]
# Description: Generate a temp file to use.  Script mus take care of cleanup
#==========================================================================
function F_tmpf {
  typeset script=${0##*/}
  typeset ins=${e_ins:-rtoi}

  mktemp -t $ins-$script-$$-XXXXX
}

#==========================================================================
# Function:    [F_cleanup]
# Description: Call at exit to cleanp all temp files
#==========================================================================
function F_cleanup {
  typeset rc=$?
  set +x                        # Disable effect of set -x in script
  typeset script=${0##*/}
  typeset ins=${e_ins:-rtoi}

  rm -f $TMPDIR/$ins-$script-$$-*
  exit $rc
}
trap F_cleanup SIGHUP SIGINT SIGTERM EXIT

#------------------------------------------------- function : F_usageOper
# Purpose  :
#-------------------------------------------------------------------------
function F_usageOper {
  typeset oper=$1 sprog=${0##*/}
  shift
  typeset errmsg=${@:-Invalid operation/missing arguments for $oper}

  # Allow any script to have a default do-nothing "test" operation.
  # So empty test could be used to check if the script syntax is broken
  # (i.e empty test =~ syntax somewhat OK)
  if [ "$oper" = "selftest" ]; then
    echo "[$sprog] self-test OK"
    exit 0
  fi
  echo "*** $errmsg: $oper" >&2
  echo "" >&2
  echo "[$sprog] Usage: $sprog [option] subcommand ..." >&2
  ruby -S emman.rb gen_use $0 $oper >&2
  echo "
[edna]:    Use 'edna -c run man $sprog' for more details
[default]: Use 'bin/apprun man $sprog' for more details
" >&2
  exit 1
}

#==========================================================================
# Function:    [F_logMsg]
# Description: .
#==========================================================================
function F_logMsg {
  typeset type=$1
  shift
  typeset date=$(date +%d-%H:%M:%S)
  typeset file=${BASH_SOURCE[1]##*/}
  typeset line=${BASH_LINENO[0]}

  echo "$type $date $file.$line $$ $@"
}

#==========================================================================
# Function:    [F_abort]
# Description: .
#==========================================================================
function F_abort {
  F_logMsg E $@
  exit 1
}

#--------------------------------------------------- function : F_confirm
# Purpose  : Extract a Y/N from user
#-------------------------------------------------------------------------
function F_confirm {
  typeset prompt=$1 line
  typeset default=${2:-n}
  line=$(F_read "$prompt (y/n) [$default]? ")
  case $line in
    [Nn]*)	return 1;;
    [Yy]*)	return 0;;
    *)
      case $default in
	[Nn]*)	return 1;;
	[Yy]*)	return 0;;
      esac
  esac
  return 1
}

PATH=$PATH:/home/linuxbrew/.linuxbrew/bin:~/bin:~/SRC/devtool/bin

if [ -x ~/.rbenv/bin/rbenv ]; then
  eval "$(~/.rbenv/bin/rbenv init - bash)"
fi

